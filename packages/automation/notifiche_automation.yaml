automation:

##########################################
#  ╔╗╔╔═╗╔╦╗╦╔═╗╦╔═╗╔═╗  ╦═╗╦╔═╗╦╦ ╦╔╦╗╦ #
#  ║║║║ ║ ║ ║╠╣ ║║  ╠═╣  ╠╦╝║╠╣ ║║ ║ ║ ║ #
#  ╝╚╝╚═╝ ╩ ╩╚  ╩╚═╝╩ ╩  ╩╚═╩╚  ╩╚═╝ ╩ ╩ #
##########################################

  - alias: 'Notifica Raccolta'
    trigger:
      - at: '19:30:00'
        platform: time
    action:
      - service: notify.telegram
        data_template:
          message: "{{ states('sensor.spazzatura') }}"
          
################################################################################
#                                                                              #
################################## AVVIO HA  ###################################
#                                                                              #
################################################################################

  - alias: 'Avvio HA'
    initial_state: true
    trigger:
      - event: start
        platform: homeassistant
    action:
      - service: notify.telegram
        data_template:
          message: >
            {{ [  
            "Home Assistant {{ states('sensor.current_version') }} è operativo, nessun problema",
            "Oggi è un nuovo giorno, Home Assistant {{ states('sensor.current_version') }}  è operativo.... fortunatamente", 
            "Cosa vuoi fare oggi? ah! Home Assistant {{ states('sensor.current_version') }} è operativo"
            ] | random }}

################################################################################
#                                                                              #
################################## RIAVVIO HA ##################################
#                                                                              #
################################################################################

  - alias: 'Home Assistant'
    initial_state: true
    trigger:
      - event: shutdown
        platform: homeassistant
    action:
      - service: notify.telegram
        data:
          message: >
            Home Assistant, il {{ now().strftime("%d-%m-%Y") }}, dalle ore {{ now().strftime("%H:%M") }}
            è momentaneamente sospeso fino al prossimo avviso

################################################################################
#                                                                              #
########################### NOTIFICA LOGIN ERRATI HA ###########################
#                                                                              #
################################################################################
      
  - alias: 'Notifica Login Fallito'
    initial_state: true
    trigger:
      - platform: state
        entity_id: persistent_notification.http_login
    condition:
      - condition: template
        value_template: "{{ trigger.to_state.state != 'None' }}"
    action:
      - service: notify.telegram
        data_template:
          title: "Tentativo Accesso"
          message: "url: https://whatismyipaddress.com/ip/{{ states.persistent_notification.http_login.attributes.message.split ('from ') [1] }}"
      - service: persistent_notification.dismiss
        data:
          notification_id: "http_login"

################################################################################
#                                                                              #
################################### CAMBIO IP ##################################
#                                                                              #
################################################################################

  - alias: Notifica Cambio IP
    initial_state: true 
    trigger:
      - platform: state 
        entity_id: sensor.myip
    action:
      - service: notify.telegram
        data_template:
          message: "Nuovo IP: {{ states('sensor.myip') }}"
      
#############################################
#  ╔╗╔╔═╗╔╦╗╦╔═╗╦╔═╗╔═╗  ╦ ╦╔═╗╔╦╗╔═╗╔╦╗╔═╗ #
#  ║║║║ ║ ║ ║╠╣ ║║  ╠═╣  ║ ║╠═╝ ║║╠═╣ ║ ║╣  #
#  ╝╚╝╚═╝ ╩ ╩╚  ╩╚═╝╩ ╩  ╚═╝╩  ═╩╝╩ ╩ ╩ ╚═╝ #
#############################################

  - alias: 'Notifica Update'
    initial_state: 'true'
    trigger:
      - platform: template
        value_template: "{{ states('sensor.latest_version') != states('sensor.current_version') }}"
    action:
      - service: notify.telegram_giancarlo
        data_template:
          message: >- 
            Home Assistant {{ states('sensor.latest_version') }} è disponibile. 
            La tua versione attuale è {{ states('sensor.current_version') }}
            
##################################################################################
#  ╔╗╔╔═╗╔╦╗╦╔═╗╦╔═╗╔═╗  ╦ ╦╔═╗╔╦╗╔═╗╔╦╗╔═╗  ╔╦╗╔═╗╦  ╔═╗╔═╗╦═╗╔═╗╔╦╗  ╔╗ ╔═╗╔╦╗ #
#  ║║║║ ║ ║ ║╠╣ ║║  ╠═╣  ║ ║╠═╝ ║║╠═╣ ║ ║╣    ║ ║╣ ║  ║╣ ║ ╦╠╦╝╠═╣║║║  ╠╩╗║ ║ ║  #
#  ╝╚╝╚═╝ ╩ ╩╚  ╩╚═╝╩ ╩  ╚═╝╩  ═╩╝╩ ╩ ╩ ╚═╝   ╩ ╚═╝╩═╝╚═╝╚═╝╩╚═╩ ╩╩ ╩  ╚═╝╚═╝ ╩  #
##################################################################################

  - alias: 'Notifica Update Fix'
    initial_state: true
    trigger:
      - platform: template
        value_template: >
          {{ states("sensor.current_version") != states("sensor.latest_version") }}
    action:
      - delay:
          minutes: 3
      - service: notify.telegram_giancarlo
        data_template:
          message: >- 
            Home Assistant {{ states('sensor.latest_version') }} è disponibile, 
            la tua versione attuale è {{ states('sensor.current_version') }}

            {{state_attr('sensor.ha_fix','body')|regex_replace(find='\[.*\]?.*', ignorecase=False) | replace ('(', '')}}
          data:
            inline_keyboard:
              - '{{ "\U0001F4A1" }} Aggiornamento:/update'
              
            
################################################################################
#                                                                              #
############################## NOTIFICA MOVIMENTO ##############################
#                                                                              #
################################################################################

  - alias: "Notifica Movimento"
    trigger:
      platform: state
      entity_id:
        - !secret device_giancarlo
        - !secret device_oksana
    condition:
      condition: template
      value_template: '{{ trigger.to_state.state != trigger.from_state.state }}'
    action:
      service: notify.telegram
      data_template:
        title: "Movimento"
        message: >-
          {% if (trigger.to_state.state in ['home', 'Office']) and (trigger.from_state.state in ['away', 'not_home']) %}
            Ben arrivato {{ trigger.from_state.attributes.friendly_name }} in {{ trigger.to_state.state }}
          {% elif (trigger.to_state.state in ['away', 'not_home']) and (trigger.from_state.state in ['home', 'Office']) %}
            Buona partenza {{ trigger.from_state.attributes.friendly_name }} da {{ trigger.from_state.state }}
          {% endif %}
